---
import { Image } from "astro:assets";
import {
  getCollection,
  getEntries,
  type CollectionEntry,
  getEntry,
} from "astro:content";

import { format } from "date-fns";
import clsx from "clsx";

import Layout from "@/layouts/Layout.astro";
import { formatArtistNames, formatReleaseType } from "@/utils/format";
import { Container } from "@/components/ui/container";
import Tracklist from "@/components/Tracklist.astro";
import ArtistList from "@/components/ArtistList.astro";
import { AspectRatio } from "@/components/ui/aspect-ratio";
import { Disc3, Dna, ExternalLink, Fingerprint, Library } from "lucide-react";
import ShopList from "@/components/ShopList.astro";
import { Badge } from "@/components/ui/badge";
import Metadata from "@/components/Metadata.astro";
import ReleaseTeaser from "@/components/ReleaseTeaser.astro";

import "@styles/globals.css";

type Props = CollectionEntry<"release">;

export async function getStaticPaths() {
  const releases = await getCollection("release");
  return releases.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}

const { slug, data } = Astro.props;
const {
  title,
  info,
  purchase,
  type,
  catalogNo,
  genre,
  releaseDate,
  eanNo,
  recommended,
  cover,
} = data;

const artists = await getEntries(data.artists);
const tracks = await getEntries(data.tracklist);
const designer = await getEntry(data.coverDesignBy);
const mastering = await getEntry(data.masteringBy);

const allArtists = await getCollection("artist");

const recommendedReleases = recommended ? await getEntries(recommended) : [];
const artistNames = formatArtistNames(artists);
---

<Layout>
  <Metadata
    slot="head"
    title={`${title} by ${artistNames}`}
    description={info}
    image={`/releases/${slug}/og.png`}
    type="music.album"
    trackCount={tracks.length}
    releaseDate={format(releaseDate, "yyyy-MM-dd")}
  />
  <section>
    <Container>
      <article class="w-full">
        <div
          class="flex flex-col-reverse sm:flex-row md:flex-nowrap md:items-center md:justify-between mb-6 md:mb-12"
        >
          <div class="flex-grow sm:mr-4">
            <p class="font-semibold text-xl mt-2">
              <ArtistList artists={artists} />
            </p>
            <h1
              class="font-black text-5xl md:text-7xl lg:text-9xl md:max-w-5/6"
            >
              {title}
            </h1>
            <div class="flex flex-row flex-wrap gap-2 mt-4">
              <Badge>
                <Disc3 className="w-3 h-3 mr-1" />
                {catalogNo}
              </Badge>
              <Badge variant="outline">
                <Fingerprint className="w-3 h-3 mr-1" />
                 EAN:{eanNo}
              </Badge>
              <Badge variant="outline">
                <Library className="w-3 h-3 mr-1" />
                {formatReleaseType(type)}
              </Badge>
              <Badge variant="outline">
                <Dna className="w-3 h-3 mr-1" />
                {genre}
              </Badge>
            </div>
          </div>
          <div class="sm:w-1/4 lg:w-1/3 max-w-4xl -z-10 mb-4 lg:mb-0">
            <AspectRatio ratio={1 / 1}>
              <Image
                class="rounded-md bg-foreground/5 border"
                src={cover}
                alt={title}
                widths={[500, 1200]}
                loading="lazy"
                quality="high"
                decoding="sync"
              />
            </AspectRatio>
          </div>
        </div>
        <div
          class="grid grid-cols-1 gap-y-8 md:grid-cols-2 md:gap-x-8 md:gap-y-4"
        >
          <article>
            <h2 class="font-bold text-2xl mb-4">Description</h2>
            <p class="text-lg max-w-xl mb-4">{info}</p>
            <p class="text-sm text-muted-foreground md:text-base">
              Cover artwork designed by
              <a
                class="inline-flex items-center justify-center"
                href={designer.data.website}
                rel="noopener noreferrer"
                target="_blank"
              >
                <span class="text-foreground">{designer.data.name}</span>
                <ExternalLink className="h-4 w-4 ml-1 text-muted-foreground" />
              </a>
            </p>
            <p class="text-sm text-muted-foreground md:text-base">
              Mastering by {mastering.data.engineer} at
              <a
                class="inline-flex items-center justify-center"
                href={mastering.data.website}
                rel="noopener noreferrer"
                target="_blank"
              >
                <span class="text-foreground">{mastering.data.name}</span>
                <ExternalLink className="h-4 w-4 ml-1" />
              </a>
            </p>
          </article>
          <aside>
            <article>
              <h2 class="font-bold text-2xl mb-4">Tracklist</h2>
              <Tracklist tracks={tracks} />
            </article>
          </aside>
          {
            purchase && (
              <article>
                <h2 class="font-bold text-2xl mb-4">Stream or Purchase</h2>
                <ShopList {...purchase} />
              </article>
            )
          }
        </div>
      </article>
      {
        recommendedReleases.length > 0 && (
          <article class="w-full mt-12">
            <h2 class="font-bold text-2xl mb-4">Other recommended releases</h2>
            <div class="w-full grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
              {recommendedReleases.map((release, index) => (
                <ReleaseTeaser
                  className={clsx({
                    "sm:hidden lg:flex": index === 2,
                  })}
                  release={release}
                  artists={
                    allArtists.filter((artist) =>
                      release.data.artists.find(
                        (releaseArtist) => releaseArtist.slug === artist.slug,
                      ),
                    )!
                  }
                />
              ))}
            </div>
          </article>
        )
      }
    </Container>
  </section>
</Layout>
